[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = 'blacknet'
dynamic = ['version']
authors = [
	{name = 'Romain Bezut', email = 'blacknet@xdec.net'},
]
description = 'Multi-head SSH honeypot system'
readme = 'README.rst'
classifiers = [
	'License :: OSI Approved :: MIT License',
	'Operating System :: POSIX :: Linux',
	'Programming Language :: Python',
	'Programming Language :: Python :: 3',
	'Programming Language :: Python :: 3 :: Only',
	'Programming Language :: Python :: 3.9',
	'Programming Language :: Python :: 3.10',
	'Programming Language :: Python :: 3.11',
]
dependencies = [
	'msgpack >= 1.0.0',
	'PyMySQL',
	'paramiko',
]

[tool.setuptools.packages.find]
include = [
	'blacknet',
	'blacknet.console',
]

[tool.setuptools.dynamic]
version = {attr = 'blacknet.version.version'}

[project.scripts]
blacknet-master = 'blacknet.console:run_master'
blacknet-scrubber = 'blacknet.console:run_scrubber'
blacknet-sensor = 'blacknet.console:run_sensor'
blacknet-updater = 'blacknet.console:run_updater'

[tool.setuptools.package-data]
blacknet = ['py.typed']

[tool.ruff]
select = [
	'A',     # flake8-builtins
	'ASYNC', # flake8-async
	'B',     # flake8-bugbear
	'C4',    # flake8-comprehensions
	'D',     # pydocstyle
	'E',     # pycodestyle errors
	'F',     # Pyflakes
	'N',     # pep8-naming
	'PIE',   # flake8-pie
	'PT',    # flake8-pytest-style
	'Q',     # flake8-quotes
	'RET',   # flake8-return
	'RUF',   # Ruff-specific rules
	'SLF',   # flake8-self
	'UP',    # pyupgrade
	'W',     # pycodestyle warnings
]
ignore = [
	'A003',  # Class attribute is shadowing a python builtin
	'D100',  # Missing docstring in public module
	'D104',  # Missing docstring in public package
	'D203',  # 1 blank line required before class docstring
	'D213',  # Multi-line docstring summary should start at the second line
	'D401',  # First line of docstring should be in imperative mood
]
line-length = 95
target-version = 'py39'

[tool.ruff.per-file-ignores]
'tests/*.py' = ['D']

[tool.coverage.run]
source = ['blacknet']
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
	'pragma: no cover',
	'raise NotImplementedError',
	'raise NotImplemented',
	'if TYPE_CHECKING:',
	'@overload',
]

[tool.coverage.paths]
source = [
	'blacknet/',
]

[tool.black]
color = true
line-length = 95
target-version = ['py39']
skip-string-normalization = true

[tool.isort]
line_length = 95
known_first_party = 'blacknet'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

[tool.mypy]
python_version = '3.9'
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ['msgpack']
ignore_missing_imports = true
