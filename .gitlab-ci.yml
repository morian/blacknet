stages:
  - build
  - tests
  - publish


# Global parameters for all jobs, cache everything we install.
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.pip_cache"

.pip-cache: &pip_cache
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .pip_cache/
  policy: pull-push


python3-package:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.11-alpine
  stage: build
  cache:
    <<: *pip_cache
  script:
    - python -m build --sdist --wheel
  artifacts:
    name: "blacknet-${CI_COMMIT_REF_NAME}"
    expire_in: 7 days
    paths:
      - dist/

python3-linter:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.11-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-linting
  script:
    - make lint
  allow_failure: true

python3-mypy:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.11-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-blacknet
    - make install-linting
  script:
    - make mypy

python3-tests:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.11-alpine
  stage: tests
  needs: []
  variables:
    MARIADB_USER: "blacknet"
    MARIADB_PASSWORD: "blacknet"
    MARIADB_ROOT_PASSWORD: "blacknet"
  services:
    - name: "mariadb:10.4"
      alias: database
  cache:
    <<: *pip_cache
  before_script:
    - apk --no-cache add mariadb-client
    - python -m venv venv
    - source venv/bin/activate
    - make install-testing
  script:
    - bash tests/db-setup.sh database blacknet blacknet blacknet blacknet
    - sed -i 's/host = localhost/host = database/' tests/blacknet.cfg
    - coverage run runtests.py
    - coverage xml
  coverage: '/TOTAL.+ ([0-9]{1,3}[.][0-9]{2}%)/'
  artifacts:
    name: "tests-${CI_COMMIT_REF_NAME}"
    expire_in: 7 days
    paths:
      - tests/generated/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  allow_failure: true

python3-publish:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.11-alpine
  stage: publish
  variables:
    TWINE_REPOSITORY_URL: ${CI_SERVER_URL}/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
  only:
    - tags
  needs:
    - python3-package
  script:
    - twine upload dist/blacknet-*.whl
